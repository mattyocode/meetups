{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/moliver/code/js/nextjs/meetups/pages/[meetupId]/index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Meetouts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse a list of outdoors meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      img: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      desc: props.meetupData.desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/moliver/code/js/nextjs/meetups/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","desc"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,YAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADxB;AAEE,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,MAAA,IAAI,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJzB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;KAfQN,a;;AA0ET,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport { Fragment } from \"react\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return (\n    <Fragment>\n      <Head>\n        <title>Meetouts</title>\n        <meta name=\"description\" content=\"Browse a list of outdoors meetups\" />\n      </Head>\n      <MeetupDetail\n        img={props.meetupData.image}\n        title={props.meetupData.title}\n        address={props.meetupData.address}\n        desc={props.meetupData.desc}\n      />\n    </Fragment>\n  );\n}\n\nexport async function getStaticPaths() {\n  const user = process.env.MONGO_USER;\n  const pw = process.env.MONGO_PASSWORD;\n  const dbName = process.env.MONGO_DB_NAME;\n\n  const client = await MongoClient.connect(\n    `mongodb+srv://${user}:${pw}@cluster0.1ykyz.mongodb.net/${dbName}?retryWrites=true&w=majority`\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  // find => first object to filter entires (empty = all), send which fields\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const user = process.env.MONGO_USER;\n  const pw = process.env.MONGO_PASSWORD;\n  const dbName = process.env.MONGO_DB_NAME;\n\n  const meetupId = context.params.meetupId;\n  console.log(\"meetupId from params.meetupId\", meetupId);\n\n  const client = await MongoClient.connect(\n    `mongodb+srv://${user}:${pw}@cluster0.1ykyz.mongodb.net/${dbName}?retryWrites=true&w=majority`\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  console.log(\"meetups collection\", meetupsCollection);\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: new ObjectId(meetupId),\n  });\n\n  console.log(\"selectedMeetup data\", selectedMeetup);\n\n  client.close();\n\n  return {\n    props: {\n      meetupData: { ...selectedMeetup, _id: selectedMeetup._id.toString() },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}