{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/moliver/code/js/nextjs/meetups/pages/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst user = process.env.MONGO_USER;\nconst pw = process.env.MONGO_PASSWORD;\nconst dbName = process.env.MONGO_DB_NAME; // const DUMMY_MEETUPS = [\n//   {\n//     id: \"m1\",\n//     title: \"Meetout Time!\",\n//     image:\n//       \"https://images.unsplash.com/photo-1446569971295-057569541991?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2762&q=80\",\n//     address: \"Outside somewhere\",\n//     description: \"Simple outdoors meetups\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"Meetout x 2!\",\n//     image:\n//       \"https://images.unsplash.com/6/mountain.JPG?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2700&q=80\",\n//     address: \"Outside somewhere\",\n//     description: \"We made it to a second meetup\",\n//   },\n// ];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n}\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(`mongodb+srv://${user}:${pw}@cluster0.1ykyz.mongodb.net/${dbName}?retryWrites=true&w=majority`);\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  console.log(\"meetupsCollection main page\", meetupsCollection);\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 3600\n  };\n} // export async function getServerSideProps(context) {\n//   // context param gives access to request and response objects\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API or file system\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/moliver/code/js/nextjs/meetups/pages/index.js"],"names":["MongoClient","MeetupList","user","process","env","MONGO_USER","pw","MONGO_PASSWORD","dbName","MONGO_DB_NAME","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","console","log","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAAzB;AACA,MAAMC,EAAE,GAAGH,OAAO,CAACC,GAAR,CAAYG,cAAvB;AACA,MAAMC,MAAM,GAAGL,OAAO,CAACC,GAAR,CAAYK,aAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CAClB,iBAAgBb,IAAK,IAAGI,EAAG,+BAA8BE,MAAO,8BAD9C,CAArB;AAGA,QAAMQ,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CH,iBAA3C;AAEA,QAAML,OAAO,GAAG,MAAMK,iBAAiB,CAACI,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLZ,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACY,GAAR,CAAaC,MAAD,KAAa;AAChCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADkB;AAEhCC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFgB;AAGhCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHkB;AAIhCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ4B,OAAb,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAetB,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nconst user = process.env.MONGO_USER;\nconst pw = process.env.MONGO_PASSWORD;\nconst dbName = process.env.MONGO_DB_NAME;\n\n// const DUMMY_MEETUPS = [\n//   {\n//     id: \"m1\",\n//     title: \"Meetout Time!\",\n//     image:\n//       \"https://images.unsplash.com/photo-1446569971295-057569541991?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2762&q=80\",\n//     address: \"Outside somewhere\",\n//     description: \"Simple outdoors meetups\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"Meetout x 2!\",\n//     image:\n//       \"https://images.unsplash.com/6/mountain.JPG?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2700&q=80\",\n//     address: \"Outside somewhere\",\n//     description: \"We made it to a second meetup\",\n//   },\n// ];\n\nfunction HomePage(props) {\n  return <MeetupList meetups={props.meetups} />;\n}\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\n    `mongodb+srv://${user}:${pw}@cluster0.1ykyz.mongodb.net/${dbName}?retryWrites=true&w=majority`\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  console.log(\"meetupsCollection main page\", meetupsCollection);\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 3600,\n  };\n}\n\n// export async function getServerSideProps(context) {\n//   // context param gives access to request and response objects\n//   const req = context.req;\n//   const res = context.res;\n\n//   // fetch data from an API or file system\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}