{"ast":null,"code":"import _regeneratorRuntime from \"/Users/moliver/code/js/nextjs/meetups/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/moliver/code/js/nextjs/meetups/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/moliver/code/js/nextjs/meetups/pages/new-meetup/index.js\",\n    _s = $RefreshSig$();\n\n// domain.com/new-meetup\nimport { useRouter } from \"next/router\";\nimport NewMeetupForm from \"../../components/meetups/NewMeetupForm\";\nvar user = process.env.MONGO_USER;\nvar pw = process.env.MONGO_PASSWORD;\nvar dbName = process.env.MONGO_DB_NAME;\n\nfunction NewMeetupPage() {\n  _s();\n\n  var router = useRouter();\n\n  function addMeetupHandler(_x) {\n    return _addMeetupHandler.apply(this, arguments);\n  }\n\n  function _addMeetupHandler() {\n    _addMeetupHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(enteredMeetupData) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"/api/new-meetup\", {\n                method: \"POST\",\n                body: JSON.stringify(enteredMeetupData),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              data = _context.sent;\n              console.log(data);\n              router.push(\"/\");\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n    return _addMeetupHandler.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n    onAddMeetup: addMeetupHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n\n_s(NewMeetupPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = NewMeetupPage;\nexport default NewMeetupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMeetupPage\");","map":{"version":3,"sources":["/Users/moliver/code/js/nextjs/meetups/pages/new-meetup/index.js"],"names":["useRouter","NewMeetupForm","user","process","env","MONGO_USER","pw","MONGO_PASSWORD","dbName","MONGO_DB_NAME","NewMeetupPage","router","addMeetupHandler","enteredMeetupData","fetch","method","body","JSON","stringify","headers","response","json","data","console","log","push"],"mappings":";;;;;;;AAAA;AACA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAAzB;AACA,IAAMC,EAAE,GAAGH,OAAO,CAACC,GAAR,CAAYG,cAAvB;AACA,IAAMC,MAAM,GAAGL,OAAO,CAACC,GAAR,CAAYK,aAA3B;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACvB,MAAMC,MAAM,GAAGX,SAAS,EAAxB;;AADuB,WAGRY,gBAHQ;AAAA;AAAA;;AAAA;AAAA,iFAGvB,iBAAgCC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAI2BC,KAAK,CAAC,iBAAD,EAAoB;AAC9CC,gBAAAA,MAAM,EAAE,MADsC;AAE9CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,iBAAf,CAFwC;AAG9CM,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AAHqC,eAApB,CAJhC;;AAAA;AAIUC,cAAAA,QAJV;AAAA;AAAA,qBAWuBA,QAAQ,CAACC,IAAT,EAXvB;;AAAA;AAWUC,cAAAA,IAXV;AAaIC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEAX,cAAAA,MAAM,CAACc,IAAP,CAAY,GAAZ;AAfJ;AAAA;;AAAA;AAAA;AAAA;AAiBIF,cAAAA,OAAO,CAACC,GAAR;;AAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHuB;AAAA;AAAA;;AAwBvB,sBAAO,QAAC,aAAD;AAAe,IAAA,WAAW,EAAEZ;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAzBQF,a;UACQV,S;;;KADRU,a;AA2BT,eAAeA,aAAf","sourcesContent":["// domain.com/new-meetup\nimport { useRouter } from \"next/router\";\n\nimport NewMeetupForm from \"../../components/meetups/NewMeetupForm\";\n\nconst user = process.env.MONGO_USER;\nconst pw = process.env.MONGO_PASSWORD;\nconst dbName = process.env.MONGO_DB_NAME;\n\nfunction NewMeetupPage() {\n  const router = useRouter();\n\n  async function addMeetupHandler(enteredMeetupData) {\n    try {\n      // internal API hosted by same server so path to file\n      // second arg to fetch is config obj\n      const response = await fetch(\"/api/new-meetup\", {\n        method: \"POST\",\n        body: JSON.stringify(enteredMeetupData),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const data = await response.json();\n\n      console.log(data);\n\n      router.push(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return <NewMeetupForm onAddMeetup={addMeetupHandler} />;\n}\n\nexport default NewMeetupPage;\n"]},"metadata":{},"sourceType":"module"}